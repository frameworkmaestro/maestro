<text xml:space="preserve">
= Query =
A classe '''MQuery''' é usada quando se deseja fazer o acesso ao banco de dados sem usar a [[>guia/model/persistence|Camada de Persitência]], quando o resultado dos [[>guia/model/criterias|criterias]] devem ser manipulados ou quando um [[>guia/view/controles|controle]] requer um objeto ''MQuery''.
Para se obter um objeto '''MQuery''' a partir de um criteria é usado o método <code>asQuery()</code>; por exemplo:
<pre lang="php">
    public function formFind() {
        $model = new Pessoa($this->data->id);
        $this->data->object = $model->getData();
        $filter->nome = $this->data->nome . '%';
        $this->data->query = $model->listByFilter($filter)->asQuery();
        $this->render();
    }
</pre>

O método <code>listByFilter()</code> retorna um criteria, e o método <code>asQuery()</code> retorna o objeto MQuery correspondente. Obter um objeto MQuery *não* indica que a query foi executada. A query só é executada efetivamente no banco de dados quando é chamado o método <code>getResult()</code>.

O método <code>getResult()</code> retorna um array bidimensional com os dados obtidos na consulta. O formato dos índices deste array dependem da opção <code>fetchStyle</code> no arquivo conf.php:

<pre  lang="php">
    'options' => array(
        ... outras opções ...
        'fetchStyle' => \FETCH_NUM,
        // \FETCH_NUM: índices numéricos; \FETCH_ASSOC: array associativo (com nomes dos campos),
        ...
    ),
</pre>

Os principais métodos da classe <code>MQuery</code> são:

<pre lang="php">public function count() // Retorna o número de linhas (registros) da consulta.
</pre>
<pre lang="php">public function getRowCount() // Retorna o número de linhas (registros) do resultado da consulta.
</pre>
<pre lang="php">public function getCSV($fileName = '', $separator =';') // Cria um arquivo CSV com o resultado da consulta.
</pre>
<pre lang="php">public function getColumnCount() // Retorna o número de colunas do resultado da consulta.
</pre>
<pre lang="php">public function getColumnName($colNumber) // Retorna o nome da coluna na posição indica por $colNumber.
</pre>
<pre lang="php">public function getColumnNames() // Retorna um array com os nomes de todas as colunas
</pre>
<pre lang="php">public function getColumnNumber($colName) // Retorna o número da coluna indica por $colName.
</pre>
<pre lang="php">public function getResult() // Retorna um array bidimensional (linhas e colunas) com resultado da consulta.
</pre>
<pre lang="php">public function chunkResult($key = 0, $value = 1, $showKeyValue = false) // Comprime o resultado da consulta em um array com uma coluna.
</pre>
<pre lang="php">public function uniqueResult() // Retorna a primeira linha do resultado da consulta.
</pre>
<pre lang="php">public function asXML($root = 'root', $node = 'node') // Retorna o resultado da consulta expresso em XML.
</pre>
<pre lang="php">public function asObjectArray($fields = null) // Retorna o resultado da consulta como um array de objetos.
</pre>
<pre lang="php">public function asJSON($fields = null) // Retorna o resultado da consulta como um objeto JSON.
</pre>
<pre lang="php">public function asCSV($showColumnName = false) // Retorna a string CSV correspondente ao resultado da consulta.
</pre>
<pre lang="php">public function each($callback) // Executa a função $callback, passando cada linha do resultado da consulta.
</pre>

</text>